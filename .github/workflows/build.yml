name: Build Smart Clipboard

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          # macOS builds
          - os: macos-latest
            platform: darwin/amd64
            artifact_name: Smart-Clipboard-macOS-x64
            go-version: 1.22.x
            node-version: 18.x
          - os: macos-latest
            platform: darwin/arm64
            artifact_name: Smart-Clipboard-macOS-arm64
            go-version: 1.22.x
            node-version: 18.x
          # Windows build
          - os: windows-latest
            platform: windows/amd64
            artifact_name: Smart-Clipboard-Windows
            go-version: 1.22.x
            node-version: 18.x
          # Linux build
          - os: ubuntu-latest
            platform: linux/amd64
            artifact_name: Smart-Clipboard-Linux
            go-version: 1.22.x
            node-version: 18.x
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      # Linux dependencies
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libx11-dev \
            libxkbcommon-x11-dev \
            libxtst-dev \
            libxcb1-dev \
            libxcb-xkb-dev \
            x11-xkb-utils \
            libx11-xcb-dev \
            xorg-dev \
            libxkbfile-dev \
            xvfb \
            x11-xserver-utils \
            libxinerama-dev \
            libxcursor-dev \
            libxrandr-dev \
            libxi-dev

      # Start Xvfb for Linux
      - name: Start Xvfb
        if: matrix.os == 'ubuntu-latest'
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99.0" >> $GITHUB_ENV

      # Build for each platform
      - name: Build macOS
        if: matrix.os == 'macos-latest'
        run: |
          wails build -platform ${{ matrix.platform }}
          cd build/bin
          zip -r ${{ matrix.artifact_name }}.zip "Smart Clipboard.app"

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: |
          wails build -platform ${{ matrix.platform }}
          cd build/bin
          Compress-Archive -Path "Smart Clipboard.exe" -DestinationPath ${{ matrix.artifact_name }}.zip

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          wails build -platform ${{ matrix.platform }}
          cd build/bin
          zip -r ${{ matrix.artifact_name }}.zip "Smart Clipboard"

      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: build/bin/*.zip

      # Create release when a tag is pushed
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/bin/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 